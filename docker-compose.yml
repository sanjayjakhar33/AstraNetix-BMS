version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-astranetix_bms}
      POSTGRES_USER: ${POSTGRES_USER:-astranetix_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-astranetix_user} -d ${POSTGRES_DB:-astranetix_bms}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # AstraNetix Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-astranetix_user}:${POSTGRES_PASSWORD:-secure_password}@postgres:5432/${POSTGRES_DB:-astranetix_bms}
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=${DEBUG:-true}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-super-secure-secret-key-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Founder Portal Frontend
  founder-portal:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/founder-portal:/app
    command: sh -c "npm install && npm start"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    restart: unless-stopped

  # ISP Portal Frontend
  isp-portal:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3001:3000"
    volumes:
      - ./frontend/isp-portal:/app
    command: sh -c "npm install && npm start"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    restart: unless-stopped

  # Branch Portal Frontend
  branch-portal:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3002:3000"
    volumes:
      - ./frontend/branch-portal:/app
    command: sh -c "npm install && npm start"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    restart: unless-stopped

  # User Portal Frontend
  user-portal:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3003:3000"
    volumes:
      - ./frontend/user-portal:/app
    command: sh -c "npm install && npm start"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: astranetix_network